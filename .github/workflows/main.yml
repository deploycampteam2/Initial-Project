name: Deploy Streamlit (Simple) to VPS

on: [push]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Basic system info
        run: |
          echo "üéØ === SIMPLE STREAMLIT DEPLOYMENT ==="
          echo "üìÖ Date: $(date)"
          echo "üë§ User: $(whoami)"
          echo "üñ•Ô∏è Hostname: $(hostname)"
          echo "üìÇ Working Directory: $(pwd)"
          
      - name: Deploy application
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "üöÄ === DEPLOYING STREAMLIT APP ==="
          
          # Navigate to home directory
          cd /home/ubuntu
          
          # Remove existing project if exists and create a new one
          if [ -d "initial_project" ]; then
            echo "üßπ Removing existing project..."
            rm -rf initial_project
          fi

          echo "üìÅ Creating new initial_project folder..."
          mkdir -p initial_project
          
          # Clone repository using token
          echo "üì• Cloning repository..."
          git clone https://$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git initial_project
          
          # Navigate to project directory
          cd initial_project
          
          echo "‚úÖ Repository cloned successfully"
          echo "üìã Project structure:"
          ls -la
          echo "üìã Website folder contents:"
          ls -la website/
          
      - name: Build and run Streamlit container (Simple)
        run: |
          echo "üê≥ === SIMPLE DOCKER SETUP ==="
          cd /home/ubuntu/initial_project
          
          # Stop and remove existing container if running
          if docker ps -a | grep -q "streamlit-simple"; then
            echo "üõë Stopping existing container..."
            docker stop streamlit-simple
            docker rm streamlit-simple
          fi
          
          # Remove old image if exists
          if docker images | grep -q "streamlit-app"; then
            echo "üóëÔ∏è Removing old image..."
            docker rmi streamlit-app
          fi
          
          # Build new Docker image (simple version)
          echo "üèóÔ∏è Building simple Docker image..."
          docker build -t streamlit-app .
          
          # Run container with port mapping
          echo "üöÄ Starting Streamlit container..."
          docker run -d \
            --name streamlit-simple \
            -p 80:8501 \
            --restart unless-stopped \
            streamlit-app
          
          # Wait for container to start
          sleep 10
          
          # Check if container is running
          if docker ps | grep -q "streamlit-simple"; then
            echo "‚úÖ Streamlit container is running!"
            echo "üåê Access your app at: http://$(hostname -I | awk '{print $1}')"
            echo "üì± Dashboard accessible directly via VPS IP!"
          else
            echo "‚ùå Container failed to start"
            echo "üìã Container logs:"
            docker logs streamlit-simple
            exit 1
          fi
          
      - name: Health check
        run: |
          echo "üîç === HEALTH CHECK ==="
          
          # Check container status
          echo "üìä Container status:"
          docker ps | grep streamlit-simple
          
          # Check container logs
          echo "üìã Recent logs:"
          docker logs --tail 10 streamlit-simple
          
          # Test if app responds
          sleep 5
          if curl -f http://localhost/ > /dev/null 2>&1; then
            echo "‚úÖ Streamlit app is responding!"
            echo "üéâ Simple deployment successful!"
          else
            echo "‚ö†Ô∏è App might still be starting..."
            sleep 5
            if curl -f http://localhost/ > /dev/null 2>&1; then
              echo "‚úÖ App is now responding!"
            else
              echo "‚ùå App not responding, check logs"
            fi
          fi