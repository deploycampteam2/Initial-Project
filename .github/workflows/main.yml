name: Deploy FastAPI + Streamlit + MLflow

on: [push]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Basic system info
        run: |
          echo "🎯 === DEPLOYMENT: FASTAPI + STREAMLIT + MLFLOW ==="
          echo "📅 Date: $(date)"
          echo "👤 User: $(whoami)"
          echo "🖥️ Hostname: $(hostname)"
          echo "🌐 Server IP: $(hostname -I | awk '{print $1}')"
          
      - name: Deploy application
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "🚀 === DEPLOYING APPLICATIONS ==="
          
          # Navigate to home directory
          cd /home/ubuntu
          
          # Clean removal of existing project
          if [ -d "initial_project" ]; then
            echo "🧹 Removing existing project..."
            rm -rf initial_project
          fi
          
          # Clone repository
          echo "📥 Cloning repository..."
          git clone https://$GH_TOKEN@github.com/$GITHUB_REPOSITORY.git initial_project
          cd initial_project
          
          echo "✅ Repository cloned successfully"
          echo "📋 Project structure:"
          ls -la
          
          # Create MLflow data directory
          echo "📁 Creating MLflow data directory..."
          mkdir -p mlflow_data
          
      - name: Clean Docker environment
        run: |
          echo "🧹 === CLEANING DOCKER ENVIRONMENT ==="
          
          # Stop ALL running containers (not just compose)
          echo "🛑 Stopping all running containers..."
          docker stop $(docker ps -q) 2>/dev/null || true
          
          # Remove ALL containers
          echo "🗑️ Removing all containers..."
          docker rm $(docker ps -aq) 2>/dev/null || true
          
          # Stop any existing compose services
          cd /home/ubuntu/initial_project
          docker-compose down 2>/dev/null || true
          
          # Clean up docker system
          echo "🧹 Cleaning up docker system..."
          docker system prune -f
          docker network prune -f
          
          # Verify clean state
          echo "✅ Verifying clean state..."
          echo "Running containers:"
          docker ps
          echo "Port 80 usage:"
          sudo lsof -i :80 || echo "Port 80 is free"
          echo "Port 5000 usage:"
          sudo lsof -i :5000 || echo "Port 5000 is free"
          echo "Port 8501 usage:"
          sudo lsof -i :8501 || echo "Port 8501 is free"
          echo "Port 8000 usage:"
          sudo lsof -i :8000 || echo "Port 8000 is free"
          
      - name: Deploy services with Docker Compose
        run: |
          echo "🐳 === DEPLOYING FRESH SERVICES ==="
          cd /home/ubuntu/initial_project
          
          # Build and start services
          echo "🏗️ Building and starting services..."
          docker-compose up -d --build
          
          # Wait for services to start
          echo "⏳ Waiting for services to initialize..."
          sleep 25
          
          # Check services status
          echo "📊 Services status:"
          docker-compose ps
          
          # Verify all services are running
          if docker ps | grep -q "fastapi-app" && docker ps | grep -q "streamlit-app" && docker ps | grep -q "mlflow-server"; then
            echo "✅ All services are running!"
          else
            echo "❌ Some services failed to start"
            docker-compose logs
            exit 1
          fi
          
      - name: Service accessibility check
        run: |
          echo "🔍 === ACCESSIBILITY CHECK ==="
          cd /home/ubuntu/initial_project
          
          # Wait a bit more for full initialization
          sleep 10
          
          echo "🧪 Testing FastAPI..."
          if curl -f -s http://localhost:8000/ > /dev/null 2>&1; then
            echo "✅ FastAPI: Accessible on port 8000"
          else
            echo "⚠️ FastAPI: Not responding on port 8000"
          fi
          
          echo "🧪 Testing Streamlit Dashboard..."
          if curl -f -s http://localhost/ > /dev/null 2>&1; then
            echo "✅ Streamlit: Accessible on port 80"
          else
            echo "⚠️ Streamlit: Not responding on port 80"
          fi
          
          if curl -f -s http://localhost:8501/ > /dev/null 2>&1; then
            echo "✅ Streamlit: Accessible on port 8501"
          else
            echo "⚠️ Streamlit: Not responding on port 8501"
          fi
          
          echo "🧪 Testing MLflow Server..."
          if curl -f -s http://localhost:5000/ > /dev/null 2>&1; then
            echo "✅ MLflow: Accessible on port 5000"
          else
            echo "⚠️ MLflow: Not responding on port 5000"
          fi
          
          # Show container health
          echo "🏥 Container health status:"
          docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          
          # Show recent logs
          echo "📋 Recent container logs:"
          echo "--- FastAPI logs ---"
          docker logs --tail 5 fastapi-app
          echo "--- Streamlit logs ---"
          docker logs --tail 5 streamlit-app
          echo "--- MLflow logs ---"
          docker logs --tail 5 mlflow-server
          
          # Show listening ports
          echo "👂 Listening ports:"
          sudo netstat -tulnp | grep -E ':80|:5000|:8501|:8000'
          
          echo ""
          echo "🎉 Deployment completed successfully!"
          echo ""
          echo "📊 Your Applications:"
          echo "   🚀 FastAPI: http://$(hostname -I | awk '{print $1}'):8000"
          echo "   📖 FastAPI Docs: http://$(hostname -I | awk '{print $1}'):8000/docs"
          echo "   🌐 Streamlit Dashboard: http://$(hostname -I | awk '{print $1}')"
          echo "   🤖 MLflow UI: http://$(hostname -I | awk '{print $1}'):5000"
          echo ""
          echo "🔧 Management commands:"
          echo "   docker-compose ps          # Check status"
          echo "   docker-compose logs -f     # View logs"
          echo "   docker-compose restart     # Restart services"
          echo "   docker-compose down        # Stop services"